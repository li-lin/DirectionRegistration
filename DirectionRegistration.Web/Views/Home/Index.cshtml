@model DirectionRegistration.Models.IndexViewModel
@using DirectionRegistration.Models
@{
    ViewBag.Title = "方向填报";
}

<div class="page-header">
    <h3>方向填报 - [@Model.Name : @Model.Number]</h3>
</div>
<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">方向列表</h3><p class="pull-right text-danger"><span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>通过鼠标拖动进行排序，以确定方向志愿的先后顺序。</p>
    </div>
    <div class="panel-body">
        <div class="col-sm-6 col-sm-offset-3">
            <ul id="dlist" style="padding:0px;" class="list-group">
                @{
                    foreach (var item in Model.Directions)
                    {
                        <li data-id="@item.Id" class="list-group-item" style="cursor:pointer"><span class="badge" style="background-color:brown">@item.Order</span>@item.DirectionName</li>
                    }
                }
            </ul>
            @{
                if ((bool)ViewBag.IsOverTime)
                {
                    <button type="button" class="btn btn-primary btn-block btn-lg disabled">保存（填报结束）</button>
                }
                else
                {
                    <button id="btn-ok" type="button" class="btn btn-primary btn-block btn-lg">保存</button>
                }
            }
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/Sortable.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {   
            prepareSortable();

            $('#btn-ok').click(function () {
                var b = confirm('请确认你的方向志愿填报?');
                if (b) {
                    var udata = getValues();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Save")',
                        data: JSON.stringify(udata),
                        dataType: 'json',
                        contentType: 'application/json',
                        success: function (d) {
                            if (d.code == 0) {
                                toastr.success(d.data);
                            } else {
                                toastr.warning(d.data);
                            }
                        }
                    });
                }                
            });
        });

        function prepareSortable() {
            var list = document.getElementById('dlist');
            Sortable.create(list, {
                onEnd: function (evt) {
                    freshOrders();
                }
            });
        }

        function freshOrders() {
            var orders = $('#dlist span');            
            for (var i = 0; i < orders.length; i++) {
                orders[i].innerHTML = i + 1;
            }
        }

        function getValues() {
            var value = { Sid: '@Model.Id' };
            var orders = [];
            var items = $('#dlist li');
            for (var i = 0; i < items.length; i++) {
                var item = $(items[i]);
                orders.push({
                    Did: item.attr('data-id'),
                    Order: item.find('span').text()
                });
            }
            value.Orders = orders;
            return value;
        }
        
    </script>
}